name: OpenWRT Github CI
on:
  push:
  watch:
    types: started
  schedule:
    - cron: 0 */6 * * */3

jobs:
  Luci:
    runs-on: ubuntu-latest
    name: luci
    steps:
    - name: Checkout
      uses: actions/checkout@main
    - name: Copiler
      uses: Sirherobrine23/Actions-Build-Openwrt@main
      with:
        CONFIG: 'luci.config'
        BRANCH: 'openwrt-19.07'
        P1: 'p1.sh'
        P2: 'p2.sh'
        NGROK_TOKEN: "${{ secrets.NGROK_AUTH }}"
    - name: Upload To Releases
      uses: softprops/action-gh-release@v1
      if: env.UPLOADTORELEASE == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: Build to ${{ env.DEVICE_NAME }}, Run ID ${{ github.run_id }}
        tag_name: ${{ github.run_id }}-LUCI
        body_path: release.txt
        files: ${{ env.FIRMWARE_PATH }}/*
    - name: Delete Old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOADTORELEASE == 'true'
      with:
        keep_latest: 4
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  WG:
    runs-on: ubuntu-latest
    name: Wireguard without LUCI
    steps:
    - name: Checkout
      uses: actions/checkout@main
    - name: Copiler
      uses: Sirherobrine23/Actions-Build-Openwrt@main
      with:
        CONFIG: 'wireguard.config'
        BRANCH: 'openwrt-19.07'
        P1: 'p1.sh'
        P2: 'p2.sh'
        NGROK_TOKEN: "${{ secrets.NGROK_AUTH }}"
    - name: Upload To Releases
      uses: softprops/action-gh-release@v1
      if: env.UPLOADTORELEASE == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: Build to ${{ env.DEVICE_NAME }}, Run ID ${{ github.run_id }}
        tag_name: ${{ github.run_id }}-WG
        body_path: release.txt
        files: ${{ env.FIRMWARE_PATH }}/*
    - name: Delete Old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOADTORELEASE == 'true'
      with:
        keep_latest: 4
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  WG2:
    runs-on: ubuntu-latest
    name: Wireguard with LUCI
    steps:
    - name: Checkout
      uses: actions/checkout@main
    - name: Copiler
      uses: Sirherobrine23/Actions-Build-Openwrt@main
      with:
        CONFIG: 'wireguard2.config'
        BRANCH: 'openwrt-19.07'
        P1: 'p1.sh'
        P2: 'p2.sh'
        NGROK_TOKEN: "${{ secrets.NGROK_AUTH }}"
    - name: Upload To Releases
      uses: softprops/action-gh-release@v1
      if: env.UPLOADTORELEASE == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: Build to ${{ env.DEVICE_NAME }}, Run ID ${{ github.run_id }}
        tag_name: ${{ github.run_id }}-WG2
        body_path: release.txt
        files: ${{ env.FIRMWARE_PATH }}/*
    - name: Delete Old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOADTORELEASE == 'true'
      with:
        keep_latest: 4
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  CLI:
    runs-on: ubuntu-latest
    name: CLI
    steps:
    - name: Checkout
      uses: actions/checkout@main
    - name: Copiler
      uses: Sirherobrine23/Actions-Build-Openwrt@main
      with:
        CONFIG: 'cli.config'
        BRANCH: 'openwrt-19.07'
        P1: 'p1.sh'
        P2: 'p2.sh'
        NGROK_TOKEN: "${{ secrets.NGROK_AUTH }}"
    - name: Upload To Releases
      uses: softprops/action-gh-release@v1
      if: env.UPLOADTORELEASE == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: Build to ${{ env.DEVICE_NAME }}, Run ID ${{ github.run_id }}
        tag_name: ${{ github.run_id }}-CLI
        body_path: release.txt
        files: ${{ env.FIRMWARE_PATH }}/*
    - name: Delete Old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOADTORELEASE == 'true'
      with:
        keep_latest: 4
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
